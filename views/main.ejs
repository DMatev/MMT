<!doctype html>
<html>
<head>
	<link rel="stylesheet" type="text/css" href="/css/main.css">
	<title>LOLBuddies</title>
</head>
<body>
	<div id="container-main">
		<div id="menu">
			<p class="menu-option" id="LogOut">Log Out</p>
			<p class="menu-option" id="EditFriend">Edit Friend List</p>
			<p class="menu-option" id="JunglerTimerTool">Jungler Timer Tool</p>
			<p class="menu-option" id="History">Match History</p>
		</div>
		<div id="friends">
		</div>
		<div id="main-content"> 

			<div id="container-junglertimertool">
				<p> Jungler Timer Tool</p>
				<audio id="audioNotification">
				 <source src="/audio/notification.mp3" type="audio/mp3">
				  Your browser does not support HTML5 audio.
				</audio>
				<div>
					<p>Blue Golem</p>
					<canvas width="65" height="35" id="BlueTeamBlueGolem">Your browser does not support the HTML5 canvas tag.</canvas>
					<button id="btnJTTBlueGolem">Start/Reset</button>
				</div>
			</div>

			<div id="container-friendlist">
				<div class="container-erorr" id="errorMessage">
				</div>
				<div id="container-freinds" >
				</div>
				<div id="container-addfriend">
					<p style="font-size: 20px">Add Friend</p>
					<input type="text" placeholder="username" class="input-text" id="inputUsr" name="username"/>
					<input type="text" placeholder="LOL Summoner name" class="input-text" id="inputLOLAcc" name="lolacc"/>
					<select name="lolserver" id="inputLOLServer">
					  <option value="euw">EUW</option>
					  <option value="eune">EUNE</option>
					</select>
					<button class="input-button" id="btnAddFriend">Add</button>
				</div>
			</div>

			<div id="container-matchhistory">
				<div id="wait-history">
					<div class="wait"></div>
				</div>

				<div id="container-history">
				</div>
			</div>
		</div>
	</div>
<script src="/js/lib/jquery-1.11.0.min.js"></script>
<script type="text/javascript">
	$(function() {
		var lolid =<%-JSON.stringify(lolid)%>, lolserver =<%-JSON.stringify(lolserver)%>;
		var audioNotification = $('#audioNotification')[0];

		drawFriendList();

		function drawFriendList(){
			$('#friends').empty();
			$('<p style="font-size: 20px">Friends: </p>').appendTo('#friends');

			$.get( "/api/friends", function(friends) {
				if (friends.friendList.length === 0){
					$("<p>you have no friends</p>")
					.appendTo('#friends');
				}
				for(var i=0; i<friends.friendList.length; i++){
					$('<p>' + friends.friendList[i].lolacc +'</p>')
					.on('click', { server: friends.friendList[i].lolserver, id: friends.friendList[i].lolid },function(event){
						matchHistory(event.data.server, event.data.id);
					})
					.hover(
					  function() {
					    $( this ).addClass( "hover" );
					  }, function() {
					    $( this ).removeClass( "hover" );
					  }
					)
					.appendTo('#friends');
				}
			});
		}

		function drawFriends(){
			drawFriendList();
			$('#container-freinds').empty();
			$.get( "/api/friends", function(friends) {
				if (friends.friendList.length === 0){
					$("<p>you have not added friends</p>")
					.appendTo('#container-freinds');
				}
				for(var i=0; i<friends.friendList.length; i++){
					$('<div class="container-friend">' + '<p>' + friends.friendList[i].lolacc + ' ('+ friends.friendList[i].username + ')' + '</p>'  + '</div>')
					.appendTo('#container-freinds');
					$('<button class="friend-remove">remove</button>').on('click', { user_id : friends.friendList[i]._id }, function(event){
						$.ajax({
							url: '/api/friends/delete/' + encodeURIComponent(event.data.user_id),
							type: 'POST',
							data: '',
							success: function(data){
								if(data.error){
									$('#errorMessage')[0].innerHTML = data.error;
								} else {
									$('#errorMessage')[0].innerHTML = '';
									drawFriends();
								}
							}
						});
					})
					.appendTo('#container-freinds');
				}
			});
			$('#container-friendlist').show();
		}

		$( ".menu-option" ).hover(
		  function() {
		    $( this ).addClass( "hover" );
		  }, function() {
		    $( this ).removeClass( "hover" );
		  }
		);

		$('#LogOut').on('click', function(){
			window.location = '/logout';
		});

		$('#EditFriend').on('click', function(){
			$('#container-junglertimertool').hide();
			$('#container-matchhistory').hide();
			$('#errorMessage')[0].innerHTML = '';
			drawFriends();
		});
		$('#JunglerTimerTool').on('click', function(){
			$('#container-friendlist').hide();
			$('#container-matchhistory').hide();
			$('#container-junglertimertool').show();
		});
		$('#History').on('click', function(){
			matchHistory(lolserver, lolid);
		});
		$('#btnAddFriend').on('click', function(){
			$('#container-freinds').hide();
			$('#container-addfriend').hide();
			$.ajax({
				url: '/api/friends/add',
				type: 'POST',
				data: "username="+encodeURIComponent($('#inputUsr')[0].value) +
								"&lolacc="+encodeURIComponent($('#inputLOLAcc')[0].value)+
								"&lolserver="+encodeURIComponent($('#inputLOLServer')[0].value),
				success: function(data) {
					if(data.validation){
						$('#errorMessage')[0].innerHTML = data.validation;
					} else {
						$('#errorMessage')[0].innerHTML = '';
					}
					if(data.error){
						$('#errorMessage')[0].innerHTML = data.error;
					} else {
						$('#inputUsr')[0].value = '';
						$('#inputLOLAcc')[0].value = '';

						$('#container-freinds').show();
						$('#container-addfriend').show();
						drawFriends();
					}
				}	
			});
		});

		$('#btnJTTBlueGolem').on('click', function(){
			JunglerTool.stop();
			JunglerTool.start();

		});

		var JunglerTool = {
			timeOutInterval: null,
			mainLoopInterval: null,
			timeLeft: null,
			canvas: $('#BlueTeamBlueGolem')[0],
			ctx: $('#BlueTeamBlueGolem')[0].getContext('2d'),
			stop: function(){
				clearInterval(this.timeOutInterval);
				clearInterval(this.mainLoopInterval);
				audioNotification.pause();
				this.timeLeft = 0;
				this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);
			},
			start: function(){
				var that = this;
				//this.timeLeft = 360000;
				this.timeLeft = 4000;
				this.timeOutInterval = setTimeout(function(){
					audioNotification.currentTime = 0;
					audioNotification.play();
					//that.stop();
					//this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);
				}, 4000);
				this.animate();
			},
			animate: function(){
				var that = this, seconds, minutes, time;
				this.mainLoopInterval = setInterval(function(){
					that.ctx.clearRect(0,0,that.canvas.width,that.canvas.height);
					that.ctx.font = "20px Georgia";
					that.ctx.fillStyle = "white";
					seconds = parseInt((that.timeLeft / 1000) % 60) ;
					minutes = parseInt((that.timeLeft / (1000*60)) % 60);
					if (minutes > 0){
						if (seconds == 0){
							seconds += '0'; 
						}
						time = minutes + ':' + seconds;
					} else {
						time = seconds;
					}
					
					that.ctx.fillText(time,10,20);
					that.timeLeft -= 1000;
				}, 1000);
			}
		};

		function matchHistory(lolserver, lolid){
			$('#container-junglertimertool').hide();
			$('#container-friendlist').hide();
			$('#container-history').empty();
			$('#container-matchhistory').show();
			$('#wait-history').show();

			$.get( "/api/history/"+ encodeURIComponent(lolserver) + '/' + encodeURIComponent(lolid), function(data) {
				$('#wait-history').hide();
				for(var i=0; i<data.history.games.length; i++){
					var isWon;
					if (data.history.games[i].isWon){
						isWon = 'game-won';
					} else {
						isWon = 'game-lost';
					}
					$('<div class="' + isWon + '">' +
						'<div id="playerChampionImage'+ i +'">' + '</div>' +
						'<div class="statsDiv">' +
							'<div id="playerStats' + i +'"></div>' +
						'</div>' +
						'<div class="teamsDiv">' +
							'<p class="teams-text">Purple team: </p>' + 
							'<div class="purple" id="purpleTeam' + i + '"></div>' +
							'<p class="teams-text">Blue team: </p>' +
							'<div class="blue" id="blueTeam' + i + '"></div>' +
						'</div>' +
						'<div class="summonersDiv">' +
							'<p class="summoners-text">Summoners: </p>' +
							'<div id="playerSummonersSpells' + i + '"> ' +
								'<div id="playerSummoners' + i + 'spell1"></div>' +
								'<div id="playerSummoners' + i + 'spell2"></div>' + 
							'</div>' + 
						'</div>' +
						'<div class="itemsDiv">' +
							'<p class="items-text">Items: </p>' +
							'<div id="playerItems'+ i + '"></div>' +
						'</div>' + 
					'</div>')
					.appendTo('#container-history');

					$('#playerSummoners' + i + 'spell1').css({
						'position': 'relative',
						'float': 'left'
					});
					$('#playerSummoners' + i + 'spell2').css({
						'position': 'relative',
						'float': 'left'
					});
					$('#playerItems' + i).css({
						'float': 'left',
						'margin-top': -50 +'px',
						'height': 48 + 'px',
						'width': 450 + 'px'
					});
					$('#playerStats' + i).css({
						'float': 'left',
						'margin-top': 50 +'px',
						'height': 48 + 'px',
						'width': 450 + 'px'
					});
					// PLAYER CHAMPION IMAGE
					$('#playerChampionImage'+i).css({
						width: 120 + 'px',
						height: 120 + 'px',
						"background-image":  'url(' + data.history.games[i].player.champion.img.full + ')'
					}).
					on('mouseenter', {name: data.history.games[i].player.champion.name}, function(event){
						$(this).empty();
						$('<div class="info-hover"><p class="info-hover-text">' + event.data.name + '</p></div>').appendTo(this);
					})
					.on('mouseleave', {name: data.history.games[i].player.champion.name}, function(event){
						$(this).empty();
					});
					// PLAYER STATS KDA
					$("<p class='stats-text'> kills: " + data.history.games[i].player.KDA.kills + " deaths: " + data.history.games[i].player.KDA.deaths + " assists: " + data.history.games[i].player.KDA.assists + "</p>")
					.appendTo('#playerStats' + i);
					// SUMMONER SPELL 1
					$('#playerSummoners'+i+'spell1').css({
						width: data.history.games[i].player.summoners.spell1.img.sprite.width,
						height: data.history.games[i].player.summoners.spell1.img.sprite.height,
						background: data.history.games[i].player.summoners.spell1.img.sprite.background
					})
					.on('mouseenter', {name: data.history.games[i].player.summoners.spell1.name}, function(event){
						$(this).empty();
						$('<div class="info-hover"><p class="info-hover-text">' + event.data.name + '</p></div>').appendTo(this);
					})
					.on('mouseleave', {name: data.history.games[i].player.summoners.spell1.name}, function(event){
						$(this).empty();
					});
					// SUMMONER SPELL 2
					$('#playerSummoners'+i+'spell2').css({
						width: data.history.games[i].player.summoners.spell2.img.sprite.width,
						height: data.history.games[i].player.summoners.spell2.img.sprite.height,
						background: data.history.games[i].player.summoners.spell2.img.sprite.background
					})
					.on('mouseenter', {name: data.history.games[i].player.summoners.spell2.name}, function(event){
						$(this).empty();
						$('<div class="info-hover"><p class="info-hover-text">' + event.data.name + '</p></div>').appendTo(this);
					})
					.on('mouseleave', {name: data.history.games[i].player.summoners.spell2.name}, function(event){
						$(this).empty();
					});
					// ITEMS
					for(var j=0; j<data.history.games[i].player.items.length; j++){
						$('<div class="items" id="game' + i + 'item' + j + '"></div>')
						.css({
							width: data.history.games[i].player.items[j].img.sprite.width,
							height: data.history.games[i].player.items[j].img.sprite.height,
							background: data.history.games[i].player.items[j].img.sprite.background
						})
						.on('mouseenter', {name: data.history.games[i].player.items[j].name}, function(event){
							$(this).empty();
							$('<div class="info-hover"><p class="info-hover-text">' + event.data.name + '</p></div>').appendTo(this);
						})
						.on('mouseleave', {name: data.history.games[i].player.items[j].name}, function(event){
							$(this).empty();
						})
						.appendTo('#playerItems' + i);
					}
					// TEAMS
					for(var k=0; k<data.history.games[i].teams.length; k++){
						var player = $('<div class="teams" id="game' + i + 'player' + k + '"></div>')
						.css({
							width: data.history.games[i].teams[k].player.champion.img.sprite.width,
							height: data.history.games[i].teams[k].player.champion.img.sprite.height,
							background: data.history.games[i].teams[k].player.champion.img.sprite.background
						})
						.on('mouseenter', {name: data.history.games[i].teams[k].player.champion.name}, function(event){
							$(this).empty();
							$('<div class="info-hover"><p class="info-hover-text">' + event.data.name + '</p></div>').appendTo(this);
						})
						.on('mouseleave', {name: data.history.games[i].teams[k].player.champion.name}, function(event){
							$(this).empty();
						});
						if (data.history.games[i].teams[k].player.teamId === 200){
							player.appendTo('#blueTeam' + i);
						} else {
							player.appendTo('#purpleTeam' + i);
						}
					}
				}
			});
		}
	});
</script>
</body>
</html>